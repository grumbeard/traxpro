<!--   <div class="centered">
    <h2>Issue Status</h2>
    <%= form_tag chart_project_path(@project), method: :get do %>
      <%= submit_tag "Daily", class: "btn btn-primary" %>
      <%= submit_tag "Weekly", class: "btn btn-primary" %>
      <%= submit_tag "Monthly", class: "btn btn-primary" %>
    <% end %>
  </div> -->


  <h6 class="centered">Issues each week</h6>
  <div data-chart="<%= @charts_data.to_json %>" class="chart_container">
      <div class="chart_row">
          <div id="chart_div"></div>
      </div>
  </div>
  <!--Load the AJAX API-->
  <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
  <script type="text/javascript">
  google.charts.load('current', {packages: ['corechart', 'bar']});
  google.charts.setOnLoadCallback(drawStacked);

  function drawStacked() {
    const chartData = document.querySelector('.chart_container').dataset.chart
    var data = google.visualization.arrayToDataTable(JSON.parse(chartData));
    var options = {
      width: 400,
      height: 600,
      legend: { position: 'bottom', maxLines: 2 },
      bar: { groupWidth: '30%' },
      isStacked: true,
      colors: ['#BDC3C7', '#109618', '#FF9900', '#DC3912']
    };
    var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
    chart.draw(data, options);
    }
  </script>


<!--
<%= @stacked_column %><br>
<%= @it_is %><br>
<%= @before_this_date %><br>
<div>
  Issues overdue: <%= @test_1 %><br>
  Issues List: <%= @test_6 %><br>
</div>
<div>
  Issues accepted: <%= @test_2 %><br>
  Issues resolved: <%= @test_3 %><br>
  Issues pending: <%= @test_3 %><br>
  Issues raised: <%= @test_5 %><br>
</div> -->

<!--
<% if @date %>
  <div data-set-date=<%= @data %>>
  </div>
<% end %>
 -->

<!-- if stacked_column == "Daily"
  assign Time.now to variable named "before_this_date"
  create an array with the number of accepted, resolved, pending and overdue issues
    up to "before_this_date" for the project and
    then display the array values on a stacked bar
  reassign "before_this_date" variable to the DAY before and
  loop to create an array for the next column until the earliest issue is reached

elsif stacked_column == "Weekly"
  assign Time.now to variable named "before_this_date"
  create an array with the number of accepted, resolved, pending and overdue issues
    up to "before_this_date" for the project and
    then display the array values on a stacked bar
  reassign "before_this_date" variable to the DAY for the end of the WEEK before and
  loop to create an array for the next column until the earliest issue is reached
  find the end_of_week(start_day = Date.beginning_of_week) - 1

elsif stacked_column == "Monthly"
  assign Time.now to variable named "before_this_date"
  create an array with the number of accepted, resolved, pending and overdue issues
    up to "before_this_date" for the project and
    then display the array values on a stacked bar
  reassign "before_this_date" variable to the DAY for the end of the MONTH before and
  loop to create an array for the next column until the earliest issue is reached
  end_of_month()

else
  puts "Please select a timeframe for the column charts !"
end -->


<!-- <h1 data-set-issues-last-month=10> Cocre8 </h1> -->

  </body>
</html>
